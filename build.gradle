plugins {
	id 'java'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'etri'
version = System.getenv("MDT_BUILD_VERSION") ?: "unknown"

application {
	mainClass = 'mdt.cli.MDTCommandsMain'
}

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
dependencies {
	implementation project(":utils")
	implementation project(":mdt-client")

	// Guava (from the project :utils)
	implementation "com.google.guava:guava:${guava_version}"

	// Lombok (from the project :utils)
	compileOnly "org.projectlombok:lombok:${lombok_version}"
	annotationProcessor "org.projectlombok:lombok:${lombok_version}"

	// logback with SLF4j (from the project :utils)
	implementation "ch.qos.logback:logback-classic:${logback_version}"
	
	// picocli command line parser
	implementation "info.picocli:picocli:${picocli_version}"
	annotationProcessor "info.picocli:picocli-codegen:${picocli_version}"
	
	// ProgressBar
	implementation "me.tongfei:progressbar:${progress_bar_version}"
	
	// jackson 
	implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_version}"
	implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jackson_version}"
	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jackson_version}"
	
	// CSV
	implementation "de.siegmar:fastcsv:${fastcsv_version}"
	
	// AAS model
	implementation "org.eclipse.digitaltwin.aas4j:aas4j-dataformat-json:${aas4j_version}"
	
	// PostgreSQL
	implementation "org.postgresql:postgresql:${postgresql_version}"
	
	// MQTT
	implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${paho_version}"
}

shadowJar {
	mergeServiceFiles()
	
	exclude 'META-INF/*.SF'
	exclude 'META-INF/*.DSA'
	exclude 'META-INF/*.RSA'
}